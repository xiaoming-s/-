#include<iostream>
#include <string>
using namespace std;

#define MAX 500

//设计联系人结构体
struct Person
{
	string m_name;
	int m_sex;
	int m_age;
	string m_phone;
	string m_address;
};

//通讯录结构体
struct Addressbooks
{
	//通讯录保存联系人数组
	struct Person personArray[MAX];
	//通讯录中当前记录人数
	int m_size=0;
};



//封装showmenu函数,在main函数中调用
//菜单界面
void showmenu() {
	cout << "****************************" << endl;
	cout << "*****   1.添加联系人   *****" << endl;
	cout << "*****   2.显示联系人   *****" << endl;
	cout << "*****   3.删除联系人   *****" << endl;
	cout << "*****   4.查找联系人   *****" << endl;
	cout << "*****   5.修改联系人   *****" << endl;
	cout << "*****   6.清空联系人   *****" << endl;
	cout << "*****   0.退出通讯录   *****" << endl;
	cout << "****************************" << endl;

}

//添加联系人
void addPerson(Addressbooks* abs) {
	//判断通讯录是否已满
	if (abs->m_size == MAX) {
		cout << "通讯录已满！" << endl;
		return;
	}
	else {
		//添加联系人
		//姓名
		cout << "请输入姓名：";
		string name;
		cin >> name;
		abs->personArray[abs->m_size].m_name = name;
		//性别

		int sex = 0;
		while (true) {
			cout << "请选择性别：";
			cout << "1 --- 男"<< "  2 --- 女" << endl;
			cout << "            ";
			cin >> sex;
			if (sex == 1 || sex == 2) {
				abs->personArray[abs->m_size].m_sex = sex;
				break;
			}
			else {
				cout << "输入有误，请重新输入" << endl;
			}
			
		}
		//年龄

		int age = 0;
		while (true) {
			cout <<"请输入年龄：";
			cin >> age;
			if (age > 0 && age < 100) {
				abs->personArray[abs->m_size].m_age = age;
				break;
			}
			cout << "输入错误！" << endl;
		}

		//电话号码

		cout << "请输入电话号码：";
		string phone;
		cin >> phone;
		abs->personArray[abs->m_size].m_phone = phone;

		//家庭住址
		cout << "请输入家庭住址：";
		string address;
		cin >> address;
		abs->personArray[abs->m_size].m_address = address;

		abs->m_size++;
		cout << "添加成功！" << endl;

		//清屏函数
		system("pause");//按任意键继续
		system("cls");
	}
}

//显示联系人
void showPerson(Addressbooks* abs) {
	//判断当前通讯录是否为空
	if (!abs->m_size) {
		cout << "当前记录为空，无联系人" << endl;
	}
	else {
		for (int i = 0; i < abs->m_size; i++) {
			cout << "姓名：" << abs->personArray[i].m_name    << "\t";
			cout << "性别：" <<( abs->personArray[i].m_sex == 1?"男":"女")<< "\t";
			cout << "年龄：" << abs->personArray[i].m_age     << "\t";
			cout << "电话：" << abs->personArray[i].m_phone   << "\t";
			cout << "住址：" << abs->personArray[i].m_address << endl;
		}

	}
	system("pause");
	system("cls");
}

int isexist(string name,Addressbooks* abs) {
	for (int i = 0; i < abs->m_size; i++) {
		if (name == abs->personArray[i].m_name) {
			return i;
		}
	}
	return -1;
}

//删除联系人
void deletePerson(Addressbooks* abs) {
	cout << "请输入要删除的联系人姓名：";
	string name;
	cin >> name;
	int ret = isexist(name, abs);
	if (ret!=-1) {
		for (int i = ret; i < abs->m_size-1; i++) {
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_size--;
		cout << "删除成功！" << endl;
	}
	else {
		cout<<"查无此人。"<<endl;
	}
	system("pause");
	system("cls");
}

//查找联系人
void searchPerson(Addressbooks* abs) {
	if (abs->m_size == 0) {
		cout << "当前通讯录为空！" << endl;
	}
	cout << "请输入要查找的联系人姓名：";
	string name;
	cin >> name;
	int ret = isexist(name, abs);
	if (ret != -1) {
		cout << "姓名：" << abs->personArray[ret].m_name << "\t";
		cout << "性别：" << (abs->personArray[ret].m_sex == 1 ? "男" : "女") << "\t";
		cout << "年龄：" << abs->personArray[ret].m_age << "\t";
		cout << "电话：" << abs->personArray[ret].m_phone << "\t";
		cout << "住址：" << abs->personArray[ret].m_address << endl;
	}
	else {
		cout << "查无此人。" << endl;
	}
	system("pause");
	system("cls");
}

//修改联系人
void editPerson(Addressbooks* abs) {
	if (abs->m_size == 0) {
		cout << "当前通讯录为空！" << endl;
	}
	cout << "请输入要修改的联系人姓名：";
	string name;
	cin >> name;
	int ret = isexist(name, abs);
	if (ret != -1) {
		cout << "请输入姓名：";
		string name;
		cin >> name;
		abs->personArray[ret].m_name = name;
		//性别

		int sex = 0;
		while (true) {
			cout << "请选择性别：";
			cout << "1 --- 男" << "  2 --- 女" << endl;
			cout << "            ";
			cin >> sex;
			if (sex == 1 || sex == 2) {
				abs->personArray[ret].m_sex = sex;
				break;
			}
			else {
				cout << "输入有误，请重新输入" << endl;
			}

		}
		//年龄

		int age = 0;
		while (true) {
			cout << "请输入年龄：";
			cin >> age;
			if (age > 0 && age < 100) {
				abs->personArray[ret].m_age = age;
				break;
			}
			cout << "输入错误！" << endl;
		}

		//电话号码

		cout << "请输入电话号码：";
		string phone;
		cin >> phone;
		abs->personArray[ret].m_phone = phone;

		//家庭住址
		cout << "请输入家庭住址：";
		string address;
		cin >> address;
		abs->personArray[ret].m_address = address;


		cout << "添加成功！" << endl;
	}
	else {
		cout << "查无此人。" << endl;
	}
	system("pause");
	system("cls");
}

//清空联系人
void clearPerson(Addressbooks* abs) {
	abs->m_size = 0;
	cout << "通讯录已清空" << endl;
	system("pause");
	system("cls");
}

int main() {
	//创建通讯录结构体变量
	Addressbooks abs;
	//初始化通讯录当前人员个数
	abs.m_size = 0;
	int select = -1;
	while (true) {
		showmenu();

		cin >> select;
		switch (select) {
		case 1://1.添加联系人
			addPerson(&abs);
			break;
		case 2://2.显示联系人
			showPerson(&abs);
			break;
		case 3://3.删除联系人
			deletePerson(&abs);
			break;
		case 4://4.查找联系人
			searchPerson(&abs);
			break;
		case 5://5.修改联系人
			editPerson(&abs);
			break;
		case 6://6.清空联系人
			clearPerson(&abs);
			break;
		case 0://0.退出通讯录
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;
		default:
			break;
		}
	}
	system("pause");
	return 0;
}
